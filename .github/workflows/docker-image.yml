name: CI Workflow

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Grant execute permission for Gradle wrapper
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      # Set up JDK 21
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'

      # Run tests using Gradle
      - name: Run tests
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: ./gradlew test

      # Build the application with Gradle to generate the JAR file
      - name: Build the application with Gradle
        run: ./gradlew build --stacktrace

      # Check if jar file exists
      - name: Check if JAR file exists
        run: ls -al build/libs

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build --no-cache -t projekt-uppgift-api:latest -f Dockerfile .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push casperwlx/projekt-uppgift-api:latest

      # Trigger Render deploy hook
      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_POKEMON }}
